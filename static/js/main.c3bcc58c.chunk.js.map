{"version":3,"sources":["images/trash-fill.svg","images/bootstrap.svg","images/react.svg","images/logo.svg","Header.js","Image.js","Link.js","Banner.js","GridSquare.js","EtchASketchGrid.js","CommandPalette.js","Footer.js","App.js","index.js"],"names":["module","exports","Header","props","className","image","title","Image","src","alt","altText","Link","href","url","text","logo","logoAltText","Banner","topLink","GridSquare","useState","clearColor","color","setColor","processMouseOver","event","chosenColor","cellSize","gridSizePx","squaresPerRow","onMouseOver","style","backgroundColor","height","width","renderCell","EtchASketchGrid","renderRow","cells","colNum","push","rows","rowNum","renderGrid","CommandPalette","icon","onClick","handleButtonPress","setChosenColor","target","id","createButtonGroup","buttons","createColorButton","redButton","greenButton","clearButton","TrashFill","type","role","for","class","min","max","maxSquaresPerRow","value","onChange","setSquaresPerRow","Footer","bootstrapLink","BootstrapLogo","reactLink","ReactLogo","App","headerImage","AppLogo","Math","document","documentElement","clientWidth","window","innerWidth","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3bcc58c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash-fill.25008a71.svg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap.b8af3cd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.daecac57.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2a5ad586.svg\";","import React from \"react\";\n\nexport default function Header(props) {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"container d-flex justify-content-between\">\n        <div className=\"navbar-brand d-flex align-items-center\">\n          <div className=\"pr-3\">{props.image}</div>\n          <strong>{props.title}</strong>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\"\n\nexport default function Image(props) {\n  return <img src={props.src} alt={props.altText} />;\n}","import React from \"react\";\nimport Image from \"./Image\";\n\nexport default function Link(props) {\n  return (\n    <a href={props.url} className=\"text-info link text-decoration-none\">\n      {`${props.text}${props.logo ? \" \" : \"\"}`}\n      {props.logo ? (\n        <Image src={props.logo} altText={props.logoAltText} />\n      ) : null}\n    </a>\n  );\n}\n","import React from \"react\";\nimport Link from \"./Link\";\n\nexport default function Banner() {\n  const topLink = (\n    <Link url=\"https://www.theodinproject.com\" text=\"The Odin Project\" />\n  );\n\n  return (\n    <section className=\"jumbotron text-center\">\n      <p className=\"lead text-muted\">Written for {topLink}</p>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function GridSquare(props) {\n  const [color, setColor] = useState(props.clearColor);\n\n  const processMouseOver = (event) => {\n    setColor(props.chosenColor);\n  };\n\n  const renderCell = () => {\n    let cellSize = props.gridSizePx / props.squaresPerRow;\n    return (\n      <div\n        className=\"etch-cell\"\n        onMouseOver={processMouseOver}\n        style={{ backgroundColor: color, height: cellSize, width: cellSize }}\n      ></div>\n    );\n  };\n\n  return renderCell();\n}\n","import React from \"react\";\nimport GridSquare from \"./GridSquare\";\nimport \"./css/EtchASketch.css\";\n\nexport default function EtchASketchGrid(props) {\n  const renderRow = () => {\n    let cells = [];\n    for (let colNum = 0; colNum < props.squaresPerRow; colNum++) {\n      cells.push(\n        <GridSquare\n          clearColor={props.clearColor}\n          chosenColor={props.chosenColor}\n          gridSizePx={props.gridSizePx}\n          squaresPerRow={props.squaresPerRow}\n        />\n      );\n    }\n    return <div className=\"etch-row\">{cells}</div>;\n  };\n\n  const renderGrid = () => {\n    let rows = [];\n    for (let rowNum = 0; rowNum < props.squaresPerRow; rowNum++) {\n      rows.push(renderRow(props.squaresPerRow));\n    }\n    return <div className=\"etch-grid\">{rows}</div>;\n  };\n\n  return renderGrid(props.squaresPerRow);\n}\n","import React from \"react\";\nimport Image from \"./Image\";\nimport TrashFill from \"./images/trash-fill.svg\";\n\nexport default function CommandPalette(props) {\n  const handleButtonPress = (event) => props.setChosenColor(event.target.id);\n\n  const createButtonGroup = (buttons) => {\n    return <div className=\"btn-group-sm p-3\">{buttons}</div>;\n  };\n\n  const createColorButton = (color) => {\n    let className = \"myCircle\";\n    if (color === props.chosenColor) {\n      className += \" selected\";\n    }\n    return (\n      <button\n        id={color}\n        className={className}\n        style={{ backgroundColor: color }}\n        onClick={handleButtonPress}\n      ></button>\n    );\n  };\n\n  const createIconButton = (icon, altText, onClick) => {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-secondary rounded-circle\"\n        onClick={onClick}\n      >\n        <Image src={icon} altText={altText} />\n      </button>\n    );\n  };\n\n  const clearGrid = () => {\n    props.setChosenColor(props.clearColor);\n  };\n\n  const handleSliderChange = (event) => {\n    props.setSquaresPerRow(event.target.value);\n  };\n\n  let redButton = createColorButton(\"red\");\n  let greenButton = createColorButton(\"green\");\n  let clearButton = createIconButton(TrashFill, \"clear\", clearGrid);\n\n  return (\n    <div className=\"m-auto\">\n      <div className=\"btn-toolbar m-auto\" role=\"group\">\n        {createButtonGroup([redButton, greenButton])}\n        {createButtonGroup([clearButton])}\n      </div>\n      <div className=\"m-auto\">\n        <label for=\"gridSizeRange\">Grid Size: {props.squaresPerRow}</label>\n        <input\n          type=\"range\"\n          class=\"custom-range\"\n          min=\"1\"\n          max={props.maxSquaresPerRow}\n          id=\"gridSizeRange\"\n          value={props.squaresPerRow}\n          onChange={handleSliderChange}\n        ></input>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Link from \"./Link\"\nimport BootstrapLogo from \"./images/bootstrap.svg\";\nimport ReactLogo from \"./images/react.svg\";\n\nexport default function Footer() {\n  const bootstrapLink = (\n    <Link\n      url=\"https://getbootstrap.com/\"\n      text=\"Bootstrap\"\n      logo={BootstrapLogo}\n      logoAltText=\"Bootstrap Logo\"\n    />\n  );\n  const reactLink = (\n    <Link\n      url=\"https://reactjs.org/\"\n      text=\"React\"\n      logo={ReactLogo}\n      logoAltText=\"React Logo\"\n    />\n  );\n\n  return (\n    <footer className=\"footer mt-auto py-3 text-muted font-weight-light\">\n      <div className=\"container bg-light\">\n        <p>\n          Built using {bootstrapLink} and {reactLink}\n        </p>\n      </div>\n    </footer>\n  );\n}\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Banner from \"./Banner\";\nimport EtchASketchGrid from \"./EtchASketchGrid\";\nimport CommandPalette from \"./CommandPalette\";\nimport Footer from \"./Footer\";\nimport Image from \"./Image\";\nimport AppLogo from \"./images/logo.svg\";\n\nfunction App() {\n  const headerImage = <Image src={AppLogo} altText=\"Etch-A-Sketch Logo\" />;\n  const [chosenColor, setChosenColor] = useState(\"red\");\n  const [squaresPerRow, setSquaresPerRow] = useState(16);\n  const clearColor = \"white\";\n  const maxSquaresPerRow = 50;\n  const vw = Math.max(\n    document.documentElement.clientWidth || 0,\n    window.innerWidth || 0\n  );\n  const gridSizePx = vw < 800 ? 300 : 600;\n\n  return (\n    <div className=\"h-100 d-flex flex-column text-center\">\n      <Header title=\"Etch-A-Sketch\" image={headerImage} />\n      <Banner />\n      <EtchASketchGrid\n        chosenColor={chosenColor}\n        clearColor={clearColor}\n        squaresPerRow={squaresPerRow}\n        gridSizePx={gridSizePx}\n      />\n      <CommandPalette\n        chosenColor={chosenColor}\n        setChosenColor={setChosenColor}\n        clearColor={clearColor}\n        squaresPerRow={squaresPerRow}\n        setSquaresPerRow={setSquaresPerRow}\n        maxSquaresPerRow={maxSquaresPerRow}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}